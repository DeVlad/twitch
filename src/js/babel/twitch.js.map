{"version":3,"sources":["../twitch.js"],"names":["channelUrl","streamUrl","proxy","isStreamingLive","channels","channel","promiseGetChannel","Promise","resolve","reject","fetch","then","response","json","Error","promiseGetStream","all","data","hasOwnProperty","display_name","message","logo","url","stream","status","$","append","renderResult","name","streamClass"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AACA,IAAIA,aAAa,gDAAjB;AACA,IAAIC,YAAY,+CAAhB;AACA,IAAIC,QAAQ,sCAAZ;AACA,IAAIC,kBAAkB,EAAtB;AACA;AACA,IAAIC,WAAW,CAAC,cAAD,EAAiB,SAAjB,EAA4B,YAA5B,EAA0C,WAA1C,EAAuD,UAAvD,EAAmE,YAAnE,EAAiF,cAAjF,EAAiG,YAAjG,EAA+G,UAA/G,CAAf;AACA;;;;;;AACA,yBAAoBA,QAApB,8HAA8B;AAAA,YAArBC,OAAqB;;AAC1B,YAAIC,oBAAoB,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC3DD,oBAAQE,MAAMR,QAAQF,UAAR,GAAqBK,OAA3B,EAAoCM,IAApC,CAAyC;AAAA,uBAAYC,SAASC,IAAT,EAAZ;AAAA,aAAzC,EAAsEF,IAAtE,CAA2E;AAAA,uBAAQE,IAAR;AAAA,aAA3E,CAAR;AACAJ,mBAAOK,MAAM,sCAAN,CAAP;AACH,SAHuB,CAAxB;AAIA,YAAIC,mBAAmB,IAAIR,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1DD,oBAAQE,MAAMR,QAAQD,SAAR,GAAoBI,OAA1B,EAAmCM,IAAnC,CAAwC;AAAA,uBAAYC,SAASC,IAAT,EAAZ;AAAA,aAAxC,EAAqEF,IAArE,CAA0E;AAAA,uBAAQE,IAAR;AAAA,aAA1E,CAAR;AACAJ,mBAAOK,MAAM,qCAAN,CAAP;AACH,SAHsB,CAAvB;AAIAP,gBAAQS,GAAR,CAAY,CAACV,iBAAD,EAAoBS,gBAApB,CAAZ,EAAmDJ,IAAnD,CAAwD,UAAUM,IAAV,EAAgB;AACpE,gBAAIA,KAAK,CAAL,EAAQC,cAAR,CAAuB,OAAvB,CAAJ,EAAqC;AACjCD,qBAAK,CAAL,EAAQE,YAAR,GAAuBF,KAAK,CAAL,EAAQG,OAA/B;AACAH,qBAAK,CAAL,EAAQI,IAAR,GAAe,2BAAf;AACAJ,qBAAK,CAAL,EAAQK,GAAR,GAAc,GAAd;AACH;AACD,gBAAIL,KAAK,CAAL,EAAQM,MAAR,KAAmB,IAAvB,EAA6B;AACzB;AACApB,kCAAkB,EAAlB;AACH,aAHD,MAGO;AACHA,kCAAkBc,KAAK,CAAL,EAAQM,MAAR,CAAelB,OAAf,CAAuBmB,MAAzC;AACH;AACDC,cAAE,UAAF,EAAcC,MAAd,CAAqBC,aAAaV,KAAK,CAAL,EAAQE,YAArB,EAAmCF,KAAK,CAAL,EAAQI,IAA3C,EAAiDJ,KAAK,CAAL,EAAQK,GAAzD,EAA8DnB,eAA9D,CAArB;AACH,SAbD;AAcH;AACD;;;;;;;;;;;;;;;;AACA,SAASwB,YAAT,CAAsBC,IAAtB,EAA4BP,IAA5B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAC3C;AACA,QAAIM,cAAc,SAAlB;AACA,QAAIN,WAAW,EAAX,IAAiBD,OAAO,GAA5B,EAAiC;AAC7BA,eAAO,GAAP,GAAaO,cAAc,MAA3B,GAAoCA,cAAc,MAAlD;AACH;AACD,WAAO,6BAA6BD,IAA7B,GAAoC,yBAApC,GAAgE,GAAhE,GAAsEN,GAAtE,GAA4E,GAA5E,GAAkF,KAAlF,GAA0F,cAA1F,GAA2GO,WAA3G,GAAyH,QAAzH,GAAoI,GAApI,GAA0IR,IAA1I,GAAiJ,GAAjJ,GAAuJ,GAAvJ,GAA6J,MAA7J,GAAsKO,IAAtK,GAA6K,OAA7K,GAAuL,MAAvL,GAAgML,MAAhM,GAAyM,OAAzM,GAAmN,SAA1N;AACH","file":"twitch.js","sourcesContent":["'use strict';\r\n// ---------------------------------------------------------\r\n//    Be Aware - it's not real-time API for live streams !\r\n// ---------------------------------------------------------\r\n\r\n// Settings\r\nvar channelUrl = \"https://wind-bow.gomix.me/twitch-api/channels/\";\r\nvar streamUrl = \"https://wind-bow.gomix.me/twitch-api/streams/\";\r\nvar proxy = \"https://cors-anywhere.herokuapp.com/\";\r\nvar isStreamingLive = \"\";\r\n// Yup it's hardcoded\r\nvar channels = [\"freecodecamp\", \"ESL_SC2\", \"OgamingSC2\", \"cretetion\", \"habathcx\", \"RobotCaleb\", \"noobs2ninjas\", \"comster404\", \"brunofin\"];\r\n// Ugly multiple api hits\r\nfor (var channel of channels) {\r\n    var promiseGetChannel = new Promise(function (resolve, reject) {\r\n        resolve(fetch(proxy + channelUrl + channel).then(response => response.json()).then(json => json));\r\n        reject(Error(\"Error: fetch channel from API failed\"));\r\n    });\r\n    var promiseGetStream = new Promise(function (resolve, reject) {\r\n        resolve(fetch(proxy + streamUrl + channel).then(response => response.json()).then(json => json));\r\n        reject(Error(\"Error: fetch stream from API failed\"));\r\n    });\r\n    Promise.all([promiseGetChannel, promiseGetStream]).then(function (data) {\r\n        if (data[0].hasOwnProperty(\"error\")) {\r\n            data[0].display_name = data[0].message;\r\n            data[0].logo = \"http://placehold.it/64x64\";\r\n            data[0].url = \"#\";\r\n        }\r\n        if (data[1].stream === null) {\r\n            // Not streaming\r\n            isStreamingLive = \"\";\r\n        } else {\r\n            isStreamingLive = data[1].stream.channel.status;\r\n        }\r\n        $(\".content\").append(renderResult(data[0].display_name, data[0].logo, data[0].url, isStreamingLive));\r\n    });\r\n}\r\n// Render View\r\nfunction renderResult(name, logo, url, stream) {\r\n    // Display in clickable div blocks\r\n    var streamClass = \"offline\";\r\n    if (stream !== \"\" || url == \"#\") {\r\n        url == \"#\" ? streamClass = \"dead\" : streamClass = \"live\";\r\n    }\r\n    return '<div class=\"result\" id=\"' + name + '\" onclick=\"window.open(' + \"'\" + url + \"'\" + ')\">' + \"<img class='\" + streamClass + \"' src=\" + \"'\" + logo + \"'\" + \">\" + '<h2>' + name + '</h2>' + '<h3>' + stream + '</h3>' + '</.div>';\r\n}"]}