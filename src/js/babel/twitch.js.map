{"version":3,"sources":["../twitch.js"],"names":["channelUrl","streamUrl","isStreamingLive","channels","channel","promiseGetChannel","Promise","resolve","reject","fetch","then","response","json","Error","promiseGetStream","all","data","hasOwnProperty","display_name","message","logo","url","stream","status","$","append","renderResult","name","streamClass"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAa,gDAAjB;AACA,IAAIC,YAAY,+CAAhB;AACA,IAAIC,kBAAkB,EAAtB;AACA;AACA;AACA,IAAIC,WAAW,CAAC,cAAD,EAAiB,SAAjB,EAA4B,YAA5B,EAA0C,WAA1C,EAAuD,UAAvD,EAAmE,YAAnE,EAAiF,cAAjF,EAAiG,YAAjG,EAA+G,UAA/G,CAAf;AACA;;;;;;AACA,yBAAoBA,QAApB,8HAA8B;AAAA,YAArBC,OAAqB;;AAC1B,YAAIC,oBAAoB,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC3D;AACAD,oBAAQE,MAAMT,aAAaI,OAAnB,EAA4BM,IAA5B,CAAiC;AAAA,uBAAYC,SAASC,IAAT,EAAZ;AAAA,aAAjC,EAA8DF,IAA9D,CAAmE;AAAA,uBAAQE,IAAR;AAAA,aAAnE,CAAR;AACAJ,mBAAOK,MAAM,sCAAN,CAAP;AACH,SAJuB,CAAxB;AAKA,YAAIC,mBAAmB,IAAIR,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1D;AACAD,oBAAQE,MAAMR,YAAYG,OAAlB,EAA2BM,IAA3B,CAAgC;AAAA,uBAAYC,SAASC,IAAT,EAAZ;AAAA,aAAhC,EAA6DF,IAA7D,CAAkE;AAAA,uBAAQE,IAAR;AAAA,aAAlE,CAAR;AACAJ,mBAAOK,MAAM,qCAAN,CAAP;AACH,SAJsB,CAAvB;AAKAP,gBAAQS,GAAR,CAAY,CAACV,iBAAD,EAAoBS,gBAApB,CAAZ,EAAmDJ,IAAnD,CAAwD,UAAUM,IAAV,EAAgB;AACpE;AACA;AACA;AACA,gBAAIA,KAAK,CAAL,EAAQC,cAAR,CAAuB,OAAvB,CAAJ,EAAqC;AACjC;AACAD,qBAAK,CAAL,EAAQE,YAAR,GAAuBF,KAAK,CAAL,EAAQG,OAA/B;AACAH,qBAAK,CAAL,EAAQI,IAAR,GAAe,2BAAf;AACAJ,qBAAK,CAAL,EAAQK,GAAR,GAAc,GAAd;AACH;AACD;AACA;AACA,gBAAIL,KAAK,CAAL,EAAQM,MAAR,KAAmB,IAAvB,EAA6B;AACzB;AACApB,kCAAkB,EAAlB;AACH,aAHD,MAIK;AACD;AACAA,kCAAkBc,KAAK,CAAL,EAAQM,MAAR,CAAelB,OAAf,CAAuBmB,MAAzC;AACH;AACDC,cAAE,UAAF,EAAcC,MAAd,CAAqBC,aAAaV,KAAK,CAAL,EAAQE,YAArB,EAAmCF,KAAK,CAAL,EAAQI,IAA3C,EAAiDJ,KAAK,CAAL,EAAQK,GAAzD,EAA8DnB,eAA9D,CAArB;AACH,SArBD;AAsBH;AACD;;;;;;;;;;;;;;;;AACA,SAASwB,YAAT,CAAsBC,IAAtB,EAA4BP,IAA5B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAC3C;AACA,QAAIM,cAAc,SAAlB;AACA,QAAIN,WAAW,EAAX,IAAiBD,OAAO,GAA5B,EAAiC;AAC7BA,eAAO,GAAP,GAAaO,cAAc,MAA3B,GAAoCA,cAAc,MAAlD;AACH;AACD,WAAO,6BAA6BD,IAA7B,GAAoC,yBAApC,GAAgE,GAAhE,GAAsEN,GAAtE,GAA4E,GAA5E,GAAkF,KAAlF,GAA0F,cAA1F,GAA2GO,WAA3G,GAAyH,QAAzH,GAAoI,GAApI,GAA0IR,IAA1I,GAAiJ,GAAjJ,GAAuJ,GAAvJ,GAA6J,MAA7J,GAAsKO,IAAtK,GAA6K,OAA7K,GAAuL,MAAvL,GAAgML,MAAhM,GAAyM,OAAzM,GAAmN,SAA1N;AACH","file":"twitch.js","sourcesContent":["// -----------------------------------------------------------------------------------------\n// TODO: Flexbox Cards\n// Be Aware - it's not real-time API for live streams !\n// -----------------------------------------------------------------------------------------\n// Settings\nvar channelUrl = \"https://wind-bow.gomix.me/twitch-api/channels/\";\nvar streamUrl = \"https://wind-bow.gomix.me/twitch-api/streams/\";\nvar isStreamingLive = \"\";\n// Yup it's hardcoded\n//var channels = [\"freecodecamp\", \"ESL_SC2\", \"OgamingSC2\"];\nvar channels = [\"freecodecamp\", \"ESL_SC2\", \"OgamingSC2\", \"cretetion\", \"habathcx\", \"RobotCaleb\", \"noobs2ninjas\", \"comster404\", \"brunofin\"];\n// Ugly multiple api hits\nfor (var channel of channels) {\n    var promiseGetChannel = new Promise(function (resolve, reject) {\n        //  console.log('channel ok');                \n        resolve(fetch(channelUrl + channel).then(response => response.json()).then(json => json));\n        reject(Error(\"Error: fetch channel from API failed\"));\n    });\n    var promiseGetStream = new Promise(function (resolve, reject) {\n        //console.log('stream ok');\n        resolve(fetch(streamUrl + channel).then(response => response.json()).then(json => json));\n        reject(Error(\"Error: fetch stream from API failed\"));\n    });\n    Promise.all([promiseGetChannel, promiseGetStream]).then(function (data) {\n        //console.log('Rendering data');\n        //console.log(data[0]);\n        //console.log(data[1]);\n        if (data[0].hasOwnProperty(\"error\")) {\n            //console.log(data[0].message)\n            data[0].display_name = data[0].message;\n            data[0].logo = \"http://placehold.it/64x64\";\n            data[0].url = \"#\";\n        }\n        //console.log(data[0].display_name, data[0].logo\n        //console.log(data[0].display_name, data[0].logo, data[0].url);\n        if (data[1].stream === null) {\n            // console.log('not streaming');\n            isStreamingLive = \"\";\n        }\n        else {\n            //  console.log(data[1].stream.channel.status);\n            isStreamingLive = data[1].stream.channel.status;\n        }\n        $(\".content\").append(renderResult(data[0].display_name, data[0].logo, data[0].url, isStreamingLive));\n    });\n}\n// Render View\nfunction renderResult(name, logo, url, stream) {\n    // Display in clickable div blocks\n    var streamClass = \"offline\";\n    if (stream !== \"\" || url == \"#\") {\n        url == \"#\" ? streamClass = \"dead\" : streamClass = \"live\";\n    }\n    return '<div class=\"result\" id=\"' + name + '\" onclick=\"window.open(' + \"'\" + url + \"'\" + ')\">' + \"<img class='\" + streamClass + \"' src=\" + \"'\" + logo + \"'\" + \">\" + '<h3>' + name + '</h3>' + '<h2>' + stream + '</h2>' + '</.div>';\n}"]}